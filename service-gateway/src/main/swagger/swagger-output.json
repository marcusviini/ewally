{
  "openapi": "3.0.0",
  "info": {
    "title": "SERVICE-GATEWAY",
    "version": "1.0.0",
    "description": "Gateway do service."
  },
  "servers": [
    {
      "url": "http://localhost:3000",
      "description": "Desenvolvimento"
    }
  ],
  "paths": {
    "/clean": {
      "delete": {
        "tags": [
          "Clean"
        ],
        "description": "Rota para limpar o banco de dados em memoria",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Mensagem de sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Database cleaned"
                    }
                  },
                  "xml": {
                    "name": "main"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Database cleaned"
                    }
                  },
                  "xml": {
                    "name": "main"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Ocorreu um erro",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "500": {
            "description": "Ocorreu um erro interno",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/internal_error"
                }
              }
            }
          }
        }
      }
    },
    "/person": {
      "post": {
        "tags": [
          "Person"
        ],
        "description": "Rota para cadastrar uma pessoa",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Mensagem de sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Person created"
                    }
                  },
                  "xml": {
                    "name": "main"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Person created"
                    }
                  },
                  "xml": {
                    "name": "main"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Ocorreu um erro",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Person already exists"
                    }
                  },
                  "xml": {
                    "name": "main"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Person already exists"
                    }
                  },
                  "xml": {
                    "name": "main"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Ocorreu um erro interno",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/internal_error"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "description": "Informações da pessoa",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "cpf": {
                    "type": "number",
                    "example": "12345678901"
                  },
                  "name": {
                    "type": "string",
                    "example": "john doe"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/relationship": {
      "post": {
        "tags": [
          "Relationship"
        ],
        "description": "Rota para criar uma relação entre duas pessoas",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Mensagem de sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Relationship created"
                    }
                  },
                  "xml": {
                    "name": "main"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Relationship created"
                    }
                  },
                  "xml": {
                    "name": "main"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Ocorreu um erro",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Relationship already exists"
                    }
                  },
                  "xml": {
                    "name": "main"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Relationship already exists"
                    }
                  },
                  "xml": {
                    "name": "main"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Ocorreu um erro interno",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/internal_error"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "description": "Cpf dos das duas pessoas",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "cp1": {
                    "type": "number",
                    "example": "12345678901"
                  },
                  "cpf2": {
                    "type": "number",
                    "example": "12345678902"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/person/{cpf}": {
      "get": {
        "tags": [
          "Person"
        ],
        "description": "Rota para buscar uma pessoa",
        "parameters": [
          {
            "name": "cpf",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Mensagem de sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Person found"
                    },
                    "person": {
                      "type": "object",
                      "properties": {
                        "cpf": {
                          "type": "string",
                          "example": "12345678901"
                        },
                        "name": {
                          "type": "string",
                          "example": "john doe"
                        }
                      }
                    }
                  },
                  "xml": {
                    "name": "main"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Person found"
                    },
                    "person": {
                      "type": "object",
                      "properties": {
                        "cpf": {
                          "type": "string",
                          "example": "12345678901"
                        },
                        "name": {
                          "type": "string",
                          "example": "john doe"
                        }
                      }
                    }
                  },
                  "xml": {
                    "name": "main"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Ocorreu um erro",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Person not found"
                    }
                  },
                  "xml": {
                    "name": "main"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Person not found"
                    }
                  },
                  "xml": {
                    "name": "main"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Ocorreu um erro interno",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/internal_error"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "description": "Cpf da pessoa",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "cpf": {
                    "type": "number",
                    "example": "12345678901"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/recommendations/{cpf}": {
      "get": {
        "tags": [
          "Recommendations"
        ],
        "description": "Rota para buscar sugestões de amizade",
        "parameters": [
          {
            "name": "cpf",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Mensagem de sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Recommendations found"
                    },
                    "recommendations": {
                      "type": "array",
                      "example": [
                        "12345678904",
                        "12345678905"
                      ],
                      "items": {
                        "type": "string"
                      }
                    }
                  },
                  "xml": {
                    "name": "main"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Recommendations found"
                    },
                    "recommendations": {
                      "type": "array",
                      "example": [
                        "12345678904",
                        "12345678905"
                      ],
                      "items": {
                        "type": "string"
                      }
                    }
                  },
                  "xml": {
                    "name": "main"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Ocorreu um erro",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Person not found"
                    }
                  },
                  "xml": {
                    "name": "main"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Person not found"
                    }
                  },
                  "xml": {
                    "name": "main"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Ocorreu um erro interno",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/internal_error"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "description": "Cpf da pessoa",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "cpf": {
                    "type": "number",
                    "example": "12345678901"
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "authorization_failed": {
        "type": "object",
        "properties": {
          "error": {
            "type": "string",
            "example": "Token inválido"
          }
        },
        "xml": {
          "name": "authorization_failed"
        }
      },
      "error": {
        "type": "object",
        "properties": {
          "error": {
            "type": "string",
            "example": "Ocorreu um erro na consulta"
          }
        },
        "xml": {
          "name": "error"
        }
      },
      "internal_error": {
        "type": "object",
        "properties": {
          "error": {
            "type": "string",
            "example": "Ocorreu um erro interno"
          }
        },
        "xml": {
          "name": "internal_error"
        }
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}